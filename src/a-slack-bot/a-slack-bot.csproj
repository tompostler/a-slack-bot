<Project Sdk="Microsoft.NET.Sdk">

  <!-- Populate version variables based on GitVersion if available. This will usually be run in the build definition. -->
  <PropertyGroup Condition=" '$(GitVersion_FullSemVer)' != '' ">
    <Version Condition=" '$(Version)' == '' ">$(GitVersion_FullSemVer)</Version>
    <VersionPrefix Condition=" '$(VersionPrefix)' == '' ">$(GitVersion_MajorMinorPatch)</VersionPrefix>
    <VersionSuffix Condition=" '$(VersionSuffix)' == '' ">$(GitVersion_NuGetPreReleaseTag)</VersionSuffix>
    <PackageVersion Condition=" '$(PackageVersion)' == '' ">$(GitVersion_NuGetVersion)</PackageVersion>
    <InformationalVersion Condition=" '$(InformationalVersion)' == '' ">$(GitVersion_InformationalVersion)</InformationalVersion>
    <AssemblyVersion Condition=" '$(AssemblyVersion)' == '' ">$(GitVersion_AssemblySemVer)</AssemblyVersion>
    <FileVersion Condition=" '$(FileVersion)' == '' ">$(GitVersion_MajorMinorPatch).$(GitVersion_CommitsSinceVersionSource)</FileVersion>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>net47</TargetFramework>
    <RootNamespace>a_slack_bot</RootNamespace>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Azure.WebJobs.Extensions.DocumentDB" Version="1.2.0" />
    <PackageReference Include="Microsoft.Azure.WebJobs.ServiceBus" Version="2.2.0" />
    <PackageReference Include="Microsoft.NET.Sdk.Functions" Version="1.0.13" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SlackEvents\Slack.Events.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.Configuration" />
  </ItemGroup>

  <ItemGroup>
    <None Update="host.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="local.settings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </None>
  </ItemGroup>

</Project>
