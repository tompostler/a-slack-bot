{
  "$schema": "http://schemas.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app to create."
      }
    },
    "cosmosDb": {
      "type": "object",
      "metadata": {
        "description": "Properties about the shared free cosmos db for this subscription."
      }
    },
    "pSlackAppID": {
      "type": "string",
      "metadata": {
        "description": "Slack App ID inserted by the release."
      }
    },
    "pSlackOauthToken": {
      "type": "string",
      "metadata": {
        "description": "Slack OAuth Token inserted by the release."
      }
    },
    "pSlackOauthBotToken": {
      "type": "string",
      "metadata": {
        "description": "Slack OAuth Bot Token inserted by the release."
      }
    },
    "pSlackSigningSecret": {
      "type": "string",
      "metadata": {
        "description": "Slack App Signing Secret inserted by the release."
      }
    },
    "packageLink": {
      "type": "string"
    },
    "serviceBusQueueNames": {
      "type": "array",
      "metadata": {
        "description": "Names of all the Service Bus Queues."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "dnsZone": {
      "type": "object",
      "defaultValue": {
        "name": "aslackbot.icu",
        "nsNumber": "04"
      }
    }
  },
  "variables": {
    "cosmosDbId":"[resourceId(parameters('cosmosDb').resourceGroupName, 'Microsoft.DocumentDB/databaseAccounts/', parameters('cosmosDb').name)]",
    "appInsightsName": "[parameters('appName')]",
    "hostingPlanName": "[parameters('appName')]",
    "serviceBusName": "[parameters('appName')]",
    "serviceBusRootAccessKey": "[resourceId(resourceGroup().name, 'Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusName'), 'RootManageSharedAccessKey')]",
    "storageAcctName": "[replace(parameters('appName'), '-', '')]",
    "storageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAcctName'))]",
    "blobContainerName": "blobs",
    "cdnEndpointName": "[concat(variables('storageAcctName'), '-', variables('blobContainerName'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('serviceBusName'), '/', parameters('serviceBusQueueNames')[copyIndex()])]",
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "dependsOn": [
        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]"
      ],
      "properties": {
        "lockDuration": "PT5M",
        "defaultMessageTimeToLive": "PT4H",
        "deadLetteringOnMessageExpiration": true,
        "requiresDuplicateDetection": true,
        "duplicateDetectionHistoryTimeWindow": "PT5M",
        "maxDeliveryCount": 3
      },
      "copy": {
        "name": "serviceBusQueueNameCopy",
        "count": "[length(parameters('serviceBusQueueNames'))]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAcctName')]",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      },
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-03-01-preview",
          "name": "[concat('default/', variables('blobContainerName'))]",
          "properties": {
            "publicAccess": "Blob"
          },
          "dependsOn": [
            "[variables('storageAcctName')]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Network/dnszones",
      "apiVersion": "2018-05-01",
      "name": "[parameters('dnsZone').name]",
      "location": "global",
      "properties": {
        "zoneType": "Public"
      }
    },
    {
      "type": "Microsoft.Network/dnszones/NS",
      "apiVersion": "2018-05-01",
      "name": "[concat(parameters('dnsZone').name, '/@')]",
      "properties": {
        "TTL": 172800,
        "NSRecords": [
          {
            "nsdname": "[concat('ns1-', parameters('dnsZone').nsNumber,'.azure-dns.com.')]"
          },
          {
            "nsdname": "[concat('ns2-', parameters('dnsZone').nsNumber,'.azure-dns.net.')]"
          },
          {
            "nsdname": "[concat('ns3-', parameters('dnsZone').nsNumber,'.azure-dns.org.')]"
          },
          {
            "nsdname": "[concat('ns4-', parameters('dnsZone').nsNumber,'.azure-dns.info.')]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnszones', parameters('dnsZone').name)]"
      ]
    },
    {
      "apiVersion": "2019-04-15",
      "type": "Microsoft.Cdn/profiles",
      "location": "global",
      "sku": {
        "name": "Standard_Microsoft"
      },
      "name": "[resourceGroup().name]",
      "resources": [
        {
          "apiVersion": "2019-04-15",
          "type": "endpoints",
          "name": "[concat(variables('storageAcctName'), '-', variables('blobContainerName'))]",
          "location": "global",
          "properties": {
            "originHostHeader": "[concat(variables('storageAcctName'), '.blob.core.windows.net')]",
            "originPath": "[concat('/', variables('blobContainerName'))]",
            "isHttpAllowed": false,
            "isHttpsAllowed": true,
            "queryStringCachingBehavior": "UseQueryString",
            "origins": [
              {
                "name": "[replace(concat(variables('storageAcctName'), '.blob.core.windows.net'), '.', '-')]",
                "properties": {
                  "hostName": "[concat(variables('storageAcctName'), '.blob.core.windows.net')]",
                  "httpPort": 80,
                  "httpsPort": 443
                }
              }
            ]
          },
          "dependsOn": [
            "[concat('Microsoft.Cdn/profiles/', resourceGroup().name)]"
          ]
        }
      ],
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnszones/CNAME",
      "apiVersion": "2018-05-01",
      "name": "[concat(parameters('dnsZone').name, '/', variables('blobContainerName'))]",
      "properties": {
        "TTL": 300,
        "CNAMERecord": {
          "cname": "[reference(resourceId('Microsoft.Cdn/profiles/endpoints', resourceGroup().name, variables('cdnEndpointName'))).hostName]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnszones', parameters('dnsZone').name)]",
        "[resourceId('Microsoft.Cdn/profiles/endpoints', resourceGroup().name, variables('cdnEndpointName'))]"
      ]
    },
    {
      "apiVersion": "2019-04-15",
      "type": "Microsoft.Cdn/profiles/endpoints/customDomains",
      "name": "[concat(resourceGroup().name, '/', variables('cdnEndpointName'), '/', replace(parameters('dnsZone').name, '.', '-'))]",
      "properties": {
        "hostName": "[concat(variables('blobContainerName'), '.', parameters('dnsZone').name)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnszones/CNAME', parameters('dnsZone').name, variables('blobContainerName'))]",
        "[resourceId('Microsoft.Cdn/profiles/endpoints', resourceGroup().name, variables('cdnEndpointName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]"
      },
      "sku": {
        "name": "Y1",
        "tier": "Standard",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "South Central US",
      "properties": {
        "applicationId": "[variables('appInsightsName')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('appName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAcctName'))]",
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "SlackAppID",
              "value": "[parameters('pSlackAppID')]"
            },
            {
              "name": "SlackOauthToken",
              "value": "[parameters('pSlackOauthToken')]"
            },
            {
              "name": "SlackOauthBotToken",
              "value": "[parameters('pSlackOauthBotToken')]"
            },
            {
              "name": "SlackSigningSecret",
              "value": "[parameters('pSlackSigningSecret')]"
            },
            {
              "name": "Debug",
              "value": "true"
            },
            {
              "name": "CosmosDBConnection",
              "value": "[concat('AccountEndpoint=https://', parameters('cosmosDb').name, '.documents.azure.com:443/;AccountKey=', listKeys(variables('cosmosDbId'), providers('Microsoft.DocumentDB','databaseAccounts').apiVersions[0]).primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDBEndpoint",
              "value": "[concat('https://', parameters('cosmosDb').name, '.documents.azure.com:443/')]"
            },
            {
              "name": "CosmosDBKey",
              "value": "[listKeys(variables('cosmosDbId'), providers('Microsoft.DocumentDB','databaseAccounts').apiVersions[0]).primaryMasterKey]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAcctName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsServiceBus",
              "value": "[listkeys(variables('serviceBusRootAccessKey'), '2014-09-01').primaryConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAcctName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "BlobContainerName",
              "value": "[variables('blobContainerName')]"
            },
            {
              "name": "FUNCTION_APP_EDIT_MODE",
              "value": "read"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAcctName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('appName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "Central Standard Time"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "Extensions",
          "apiVersion": "2015-02-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('appName'))]"
          ],
          "properties": {
            "packageUri": "[parameters('packageLink')]"
          }
        }
      ]
    }
  ]
}